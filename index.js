module.exports = {
  root: true,
  parser: 'babel-eslint',
  parserOptions: {
    sourceType: 'module',
  },
  plugins: ['react', 'prettier'],
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'prettier',
  ],
  env: {
    browser: true,
    node: true,
    es6: true,
    jest: true,
  },
  rules: {
    'react/jsx-curly-spacing': 'off',
    'react/jsx-no-duplicate-props': 'error',
    'react/jsx-no-undef': 'error',
    'react/jsx-no-bind': 'off',
    'react/jsx-quotes': 'off',
    'react/jsx-uses-react': 'error',
    'react/jsx-uses-vars': 'error',
    'react/jsx-closing-bracket-location': 'off',
    'react/jsx-first-prop-new-line': ['error', 'multiline'],
    'react/jsx-indent': 'off',
    'react/jsx-indent-props': 'off',
    'react/jsx-key': 'error',
    'react/jsx-pascal-case': ['error', { allowAllCaps: true }],
    'react/jsx-no-target-blank': 'error',
    'react/no-did-mount-set-state': 'off',
    'react/no-did-update-set-state': 'error',
    'react/no-unknown-property': 'error',
    'react/no-find-dom-node': 'off',
    'react/prop-types': 'error',
    'react/react-in-jsx-scope': 'error',
    'react/self-closing-comp': 'error',
    'react/sort-comp': 'off',
    'react/no-unescaped-entities': 'off',
    'react/no-string-refs': 'warn',
    'react/no-array-index-key': 'warn',
    'react/default-props-match-prop-types': ['error'],
    'react/no-children-prop': 'error',
    'react/no-multi-comp': 'warn',
    'react/require-render-return': 'error',
    'react/no-unused-prop-types': 'error',
    'react/prefer-stateless-function': [
      'error',
      { ignorePureComponents: true },
    ],
    'import/newline-after-import': ['error', { count: 1 }],
    'import/no-named-as-default': 'off',
    quotes: ['error', 'single', 'avoid-escape'],
    'no-case-declarations': 'off',
    indent: 'off',
    'object-curly-spacing': 'off',
    'array-bracket-spacing': 'off',
    'no-undef': 'error',
    'no-underscore-dangle': 'off',
    'func-names': 'off',
    'no-else-return': 'off',
    'no-console': 'error',
    'no-debugger': 'error',
    'no-throw-literal': 'off',
    'id-length': 'off',
    'no-unused-expressions': 'off',
    'no-param-reassign': 'off',
    semi: 'off',
    'max-len': 'off',
    'arrow-parens': 'off',
    'object-shorthand': ['error', 'always'],
    'no-bitwise': 'error',
    'prettier/prettier': [
      'error',
      {
        singleQuote: true,
        trailingComma: 'all',
      },
    ],
  },
};
